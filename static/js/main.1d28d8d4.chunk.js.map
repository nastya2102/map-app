{"version":3,"sources":["serviceWorker.js","Reducers/Layers/constant.js","Reducers/Layers/index.js","Reducers/index.js","Components/Popup/index.js","Components/Tooltip/index.js","Reducers/Layers/actions.js","Pages/Map/constants.js","Pages/Map/index.js","Pages/Test/index.js","routes.js","index.js"],"names":["Boolean","window","location","hostname","match","SUCCESS_ADD_POINT","defaultState","type","features","combineReducers","layer","state","arguments","length","undefined","action","Object","objectSpread","concat","toConsumableArray","payload","Popup","_ref","open","handleClose","addPoint","_useState","useState","name","description","_useState2","slicedToArray","popupData","setPopupData","handleChangeInputs","e","defineProperty","target","id","value","react_default","a","createElement","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","DialogActions","Button","onClick","color","CustomTooltip","CardContent","Typography","gutterBottom","variant","component","Fragment","points","properties","geometry","coordinates","mapCongig","container","style","center","zoom","pitch","bearing","antialias","layers3d","source","source-layer","filter","minzoom","paint","fill-extrusion-color","fill-extrusion-height","fill-extrusion-base","fill-extrusion-opacity","customMapSourse","data","customMapLayer","layout","icon-image","icon-padding","icon-allow-overlap","icon-size","MapPage","dispatch","useDispatch","mapContainer","useRef","TooltipContainer","mapboxgl","offset","map","setMap","_useState3","_useState4","popUp","setPopUp","useSelector","mapClickHandle","hasRandomPoints","queryRenderedFeatures","point","layers","isBuilding","_e$lngLat","lngLat","lat","lng","mapHoverAdd","TooltipNode","document","ReactDOM","render","Tooltip","current","setLngLat","setDOMContent","addTo","mapHoverRemove","remove","useEffect","accessToken","process","getSource","setData","on","Map","asyncToGenerator","regenerator_default","mark","_callee","labelLayerId","i","wrap","_context","prev","next","addSource","addLayer","getStyle","abrupt","resize","stop","initializeMap","handleClosePopUp","addPointTest","_ref3","_callee2","_context2","_x","apply","this","className","ref","Components_Popup","assign","useStyles","makeStyles","root","minWidth","maxWidth","title","fontSize","pos","marginBottom","Test","classes","Container","Card","CardActions","size","Routes","react_router","exact","path","layerLocal","localStorage","getItem","initialState","JSON","parse","store","createStore","reducer","subscribe","setItem","stringify","getState","react_router_dom","es","routes","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d28d8d4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SUCCESS_ADD_POINT = 'layer/add-point';","import {\n  SUCCESS_ADD_POINT,\n} from './constant';\n\nconst defaultState = {\n  type: 'FeatureCollection',\n  features: [],\n};\n\nexport default function (state = defaultState, action) {\n  switch (action.type) {\n    case SUCCESS_ADD_POINT: {\n      return {...state, features: [...state.features, action.payload]};\n    }\n    default:\n      return state;\n  }\n}","import layer from './Layers';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  layer,\n});\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst Popup = ({open, handleClose, addPoint}) => {\n  const [popupData, setPopupData]  = useState({\n    name: '',\n    description: '',\n  });\n\n  const handleAddPoint = () => {\n    addPoint(popupData);\n  };\n\n  const handleChangeInputs = (e) => {\n    setPopupData({...popupData, [e.target.id]: e.target.value});\n  };\n\n  return (\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add marker</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Add marker to map</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            value={popupData.name}\n            onChange={handleChangeInputs}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            fullWidth\n            value={popupData.description}\n            onChange={handleChangeInputs}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddPoint} color=\"primary\">\n            Add marker\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n};\n\nexport default Popup;","import React from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst CustomTooltip = ({name, description}) => {\n  return (\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>Name</Typography>\n      <Typography variant=\"h5\" component=\"h2\" color=\"textPrimary\">{name}</Typography>\n      {description && <>\n        <Typography color=\"textSecondary\" gutterBottom>Description</Typography>\n        <Typography variant=\"h5\" component=\"h2\" color=\"textPrimary\">{description}</Typography>\n      </>}\n    </CardContent>\n  );\n};\n\nexport default CustomTooltip;","import {\n  SUCCESS_ADD_POINT,\n} from './constant';\n\nexport function addPoint({points, properties}) {\n  const newPoint = {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: points,\n    },\n    properties,\n  };\n\n  return ({\n    type: SUCCESS_ADD_POINT,\n    payload: newPoint,\n  });\n};","const mapCongig = (container) => {\n  return {\n    container,\n    style: 'mapbox://styles/mapbox/streets-v11',\n    center: [-74.0066, 40.7135],\n    zoom: 15.5,\n    pitch: 45,\n    bearing: -17.6,\n    antialias: true,\n  };\n};\n\nconst layers3d = {\n  'id': '3d-buildings',\n  'source': 'composite',\n  'source-layer': 'building',\n  'filter': ['==', 'extrude', 'true'],\n  'type': 'fill-extrusion',\n  'minzoom': 15,\n  'paint': {\n    'fill-extrusion-color': '#aaa',\n    'fill-extrusion-height': [\n      'interpolate',\n      ['linear'],\n      ['zoom'],\n      15,\n      0,\n      15.05,\n      ['get', 'height'],\n    ],\n    'fill-extrusion-base': [\n      'interpolate',\n      ['linear'],\n      ['zoom'],\n      15,\n      0,\n      15.05,\n      ['get', 'min_height'],\n    ],\n    'fill-extrusion-opacity': 0.6,\n  },\n};\n\nconst customMapSourse = {\n  type: 'geojson',\n  data: {\n    type: 'FeatureCollection',\n    features: [],\n  },\n};\n\nconst customMapLayer = {\n  id: 'random-points-layer',\n  source: 'random-points-data',\n  type: 'symbol',\n  layout: {\n    'icon-image': 'bakery-15',\n    'icon-padding': 0,\n    'icon-allow-overlap': true,\n    'icon-size': 1.5,\n  },\n};\n\nexport {\n  layers3d,\n  mapCongig,\n  customMapSourse,\n  customMapLayer,\n};","import React, { useRef, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\n\nimport Popup from '../../Components/Popup';\nimport CustomTooltip from '../../Components/Tooltip';\n\nimport { addPoint } from '../../Reducers/Layers/actions';\nimport { layers3d, mapCongig, customMapSourse, customMapLayer } from './constants';\n\nimport './style.css';\n\n\nfunction MapPage() {\n  const dispatch = useDispatch();\n  const mapContainer = useRef(null);\n  const TooltipContainer = useRef(new mapboxgl.Popup({offset: 15}));\n  const [map, setMap] = useState(null);\n  const [popUp, setPopUp] = useState({\n    open: false,\n    points: [],\n  });\n  const layer = useSelector(state => state.layer);\n\n  const mapClickHandle = (e) => {\n    const hasRandomPoints = map.queryRenderedFeatures(e.point, {layers: ['random-points-layer']});\n    const isBuilding = map.queryRenderedFeatures(e.point, {layers: ['building']});\n\n    if (hasRandomPoints.length || !isBuilding.length) return;\n\n    if (e.point) {\n      const {lat, lng} = e.lngLat;\n      setPopUp({open: true, points: [lng, lat]});\n    }\n  };\n\n  const mapHoverAdd = (e) => {\n    if (e.point) {\n      const point = e.lngLat;\n      const {properties} = e.features[0];\n      const TooltipNode = document.createElement('div');\n\n      ReactDOM.render(<CustomTooltip {...properties}/>, TooltipNode);\n      TooltipContainer.current.setLngLat(point).setDOMContent(TooltipNode).addTo(map);\n    }\n  };\n\n  const mapHoverRemove = () => {\n    if (TooltipContainer && TooltipContainer.current) TooltipContainer.current.remove();\n  };\n\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n\n    const initializeMap = ({setMap, mapContainer}) => {\n      const map = new mapboxgl.Map(mapCongig(mapContainer.current));\n\n      map.on('load', async () => {\n        map.addSource('random-points-data', customMapSourse);\n        map.addLayer(customMapLayer);\n\n        const layers = map.getStyle().layers;\n        let labelLayerId;\n        for (let i = 0; i < layers.length; i++) {\n          if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n            labelLayerId = layers[i].id;\n            break;\n          }\n        }\n\n        map.addLayer(layers3d, labelLayerId);\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (map) {\n      if (layer && layer.features && layer.features.length) {\n        map.getSource('random-points-data').setData(layer);\n      }\n      map.on('click', mapClickHandle);\n      map.on('mouseover', 'random-points-layer', mapHoverAdd);\n      map.on('mouseout', 'random-points-layer', mapHoverRemove);\n    }\n\n    if (!map) initializeMap({setMap, mapContainer});\n  }, [map]);\n\n  const handleClosePopUp = () => {\n    setPopUp({open: false, points: []});\n  };\n\n  const addPointTest = async (data) => {\n    dispatch(addPoint({points: popUp.points, properties: {...data, id: 'test'}}));\n    handleClosePopUp();\n  };\n\n  useEffect(() => {\n    if (map && layer) {\n      map.getSource('random-points-data').setData(layer);\n    }\n  }, [layer]);\n\n  return (\n    <>\n      <div className=\"map-container\" ref={mapContainer}/>\n      {popUp.open && <Popup {...popUp} handleClose={handleClosePopUp} addPoint={addPointTest}/>}\n    </>);\n}\n\nexport default MapPage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: 350,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport function Test() {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Category name\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">Important title</Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">Sub title</Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore\n            magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n            commodo\n            consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n            est laborum.\"\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\">Learn More</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Test;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Map from './Pages/Map';\nimport Test from './Pages/Test';\n\nfunction Routes() {\n  return <>\n    <Switch>\n      <Route exact path='/' component={Map}/>\n      <Route exact path='/test' component={Test}/>\n    </Switch>\n  </>;\n}\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport reducer from './Reducers';\nimport Routes from './routes';\n\nconst layerLocal = localStorage.getItem('layer');\n\nconst initialState = {\n  layer: (layerLocal && JSON.parse(layerLocal)) || {},\n};\n\nconst store = createStore(reducer, initialState);\n\nstore.subscribe(() => {\n  localStorage.setItem('layer', JSON.stringify(store.getState().layer));\n});\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <Routes/>\n    </Provider>\n  </HashRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}